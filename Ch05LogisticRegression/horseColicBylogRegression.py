# !/usr/bin/env python
# encoding: utf-8
__author__ = 'Administrator'

#使用Logistic回归的随机梯度上升算法来解决病马的生死预测问题
#数据包含368个样本和28个特征。

#步骤：
#（1）收集数据：给定数据文件。
#（2）准备数据：用Python解析文本文件并填充缺失值。
#（3）分析数据：可视化并观察数据。
#（4）训练算法：使用优化算法，找到最佳的系数。
#（5）测试算法：为了量化回归的效果，需要观察错误率。根据错误率决定是否回退到训练阶段，通过改变迭代的次数和步长等参数来得到更好的回归系数。
#（6）使用算法：实现一个简单的命令行程序来收集马的症状并输出预测结果（not difficult）

#准备数据：处理数据中的缺失值
#（假设有100个样本和20个特征，这些数据都是机器收集回来的。若机器上的某个传感器损坏导致一个特征无效时该怎么办？此时是否要扔掉整个数据？这种情况下，另外19个特征怎么办？它们是否还可用？——答案是肯定的。
# 因为有时候数据相当昂贵，扔掉和重新获取都是不可取的，所以必须采用一些方法来解决这个问题。 ）
#-----一些可选的做法：
#1.使用可用特征的均值来填补缺失值；
#2.使用特殊值来填补缺失值，如-1；
#3.忽略有缺失值的样本；
#4.使用相似样本的均值添补缺失值；
#5.使用另外的机器学习算法预测缺失值。

#在预处理阶段需要做的两件事：
#第一，所有的缺失值必须用一个实数值来替换



weights=weights+alpha*error*dataMatrix[randIndex]


#P45
